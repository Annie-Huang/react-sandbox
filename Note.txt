React Front To Back 2022
https://www.udemy.com/course/react-front-to-back-2022/learn/lecture/29767686#content

https://github.com/bradtraversy/feedback-app
https://github.com/bradtraversy/github-finder-app
https://github.com/bradtraversy/house-marketplace
https://gist.github.com/bradtraversy

https://cdnjs.com/libraries/bootstrap/5.1.3

Part 1 is at C:\react\feedback-app
Part 2 is at C:\react\github-finder

=============================================================================

PS C:\react> npx create-react-app react-sandbox --use-npm


useRef:
----------
- Can set focus, change style, change value, change inner text (UseRefExample1.jsx)
- Can get previous input value  (UseRefExample2.jsx)
- Prevent memory leak on when the component make a api call, but the component is unmounted before the api comes back  (UseRefExample3.jsx, Todo.jsx) -- Keep in mind this only happens in react 17.


useMemo:
----------
- Can only trigger certain function to run if the dependence list item value has changed. It returns a memorise value (UseMemoExample.jsx)


useCallback:
-----------------
- Can memorise the entire function and only return when function has changed. It returns a memorise callback function
- In another word: memorize the function (addTask) so if the dependent list never change (e.g. setTasks), then the function never change, which prevents the component uses this function to change.
- It's essentially a HOC, a component that take a component as a prop, and prevents the re-rendering if the props or the value within it haven't changed, so we can essentially memorize a whole react component.
  (UseCallbackExample.jsx)

useFetch:
----------
- Custom hook to make fetch call, return { data, loading, error } (useFetch.js, CustomHookExample1.jsx)
